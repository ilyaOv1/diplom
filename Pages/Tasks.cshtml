@page
@model TasksModel
@{
	ViewData["Title"] = "Tasks";
    var isTaskPage = ViewContext.RouteData.Values["Page"]?.ToString() == "/Tasks";
}

<div class="page-container">
    <div class="header" style="margin-top: 80px;">
        <h1>Доска задач @Model.ProjectName</h1>
        
        <form method="post">
            <button id="addTaskButton" type="button" class="button">Добавить задачу</button>
        </form>
    </div>
    <hr class="header-line">

    <div class="status-columns">
        <div class="status-column" style="background-color: #EBECF0;">
            <div class="status-title">новыe</div>
            @{
                int count = 0;
            }
            @foreach(var i in Model.tasks)
            {
                if (i.status == "Новая" && i.project == Model.ProjectId)
                {
                    count++;
                    <div style="background: #FFFFFF; border-radius: 5px; width: 100%;  margin-right: 9px; margin-top: 10px;">
                        <p style="color: #D2D2D2; font-size: 11px; margin-left: 16px; margin-top: 6px;">№ @count</p>
                        <p style="font-size: 17px; color: black; margin-left: 16px; margin-top: 3px; font-weight: 600; ">@i.name</p>
                        <p style="font-size: 15px; color: black; margin-left: 16px; margin-top: 3px; ">Ответственный: </p>
                        <a style="color: #2954EC; text-decoration: underline; font-size: 13px; margin-left: 16px;">Подзадачи</a>
                    </div>
                }
            }
        </div>
        <div class="status-column" style="background-color: #EBECF0;">
            <div class="status-title">в работе</div>
            @{
                count = 0;
            }
            @foreach (var i in Model.tasks)
            {
                if (i.status == "В процессе" && i.project == Model.ProjectId)
                {
                    count++;
                    <div style="background: #FFFFFF; border-radius: 5px; width: 100%;  margin-right: 9px; margin-top: 10px;">
                        <p style="color: #D2D2D2; font-size: 11px; margin-left: 16px; margin-top: 6px;">№ @count</p>
                        <p style="font-size: 17px; color: black; margin-left: 16px; margin-top: 3px; font-weight: 600; ">@i.name</p>
                        <p style="font-size: 15px; color: black; margin-left: 16px; margin-top: 3px; ">Ответственный: </p>
                        <a style="color: #2954EC; text-decoration: underline; font-size: 13px; margin-left: 16px;">Подзадачи</a>
                    </div>
                }
            }
        </div>
        <div class="status-column" style="background-color: #EBECF0;">
            <div class="status-title">можно проверять</div>
            @{
                count = 0;
            }
            @foreach (var i in Model.tasks)
            {
                if (i.status == "Можно проверять" && i.project == Model.ProjectId )
                {
                    count++;
                    <div style="background: #FFFFFF; border-radius: 5px; width: 100%;  margin-right: 9px; margin-top: 10px;">
                        <p style="color: #D2D2D2; font-size: 11px; margin-left: 16px; margin-top: 6px;">№ @count</p>
                        <p style="font-size: 17px; color: black; margin-left: 16px; margin-top: 3px; font-weight: 600; ">@i.name</p>
                        <p style="font-size: 15px; color: black; margin-left: 16px; margin-top: 3px; ">Ответственный: </p>
                        <a style="color: #2954EC; text-decoration: underline; font-size: 13px; margin-left: 16px;">Подзадачи</a>
                    </div>
                }
            }
        </div>
        <div class="status-column" style="background-color: #EBECF0;">
            <div class="status-title">готово</div>
            @{
                count = 0;
            }
            @foreach (var i in Model.tasks)
            {
                if (i.status == "Готово" && i.project == Model.ProjectId)
                {
                    count++;
                    <div style="background: #FFFFFF; border-radius: 5px; width: 100%;  margin-right: 9px; margin-top: 10px;">
                        <p style="color: #D2D2D2; font-size: 11px; margin-left: 16px; margin-top: 6px;">№ @count</p>
                        <p style="font-size: 17px; color: black; margin-left: 16px; margin-top: 3px; font-weight: 600; ">@i.name</p>
                        <p style="font-size: 15px; color: black; margin-left: 16px; margin-top: 3px; ">Ответственный: </p>
                        <a style="color: #2954EC; text-decoration: underline; font-size: 13px; margin-left: 16px;">Подзадачи</a>
                    </div>
                }
            }
        </div>
    </div>
</div>


@if (isTaskPage)
{
    <div id="addTaskModalOverlay" class="modal-overlay" style="display: none;"></div>
    <div id="addTaskModal" class="modal-content" style="display: none;">
        <p style="display: none;" id="projId">@Model.ProjectId</p>
        <span id="addTaskCloseModal" class="close">&times;</span>
        <p style="color: #ABABAB; font-size: 14px;">Создание новой задачи</p>
        <hr style="border: 0; height: 2px; background: #B5B5B5;">
        <form id="addProjForm" method="post" asp-page-handler="CreateProject" enctype="multipart/form-data">
            <div>
                <h2 style="font-size: 18px; font-weight: 600; margin-bottom: 16px;">Данные задачи</h2>
                <div class="form-field">
                    <p class="form-label">Наименование</p>
                    <input class="form-control addProjInput"
                           name="Name"
                           placeholder="Введите название задачи" />
                </div>

                <div class="form-field">
                    <p class="form-label">Описание</p>
                    <textarea class="form-control addProjTextArea"
                              name="Description"></textarea>
                </div>
                <h2 style="font-size: 18px; font-weight: 600; margin-bottom: 16px;">Ответственный за задачу</h2>
                <p id="addParticipantTaskBtn" style="color: #D9D9D9; font-size: 13px; margin-bottom: 8px;">+ Добавить участника</p>
                <div style="margin-bottom: 8px;" id="usersInProject">
                </div>
                <h2 style="font-size: 18px; font-weight: 600; margin-bottom: 16px; ">Подзадачи</h2>
                <p id="addParticipantTaskBtn" style="color: #D9D9D9; font-size: 13px; margin-bottom: 8px;">+ Добавить подзадачу</p>
            </div>
            <hr style="border: 0; height: 2px; background: #B5B5B5;">
            <div style="display: flex;">
                <div style="display: flex; align-items: center; gap: 8px; margin-left: auto;">
                    <button type="submit" class="button">Создать</button>
                </div>
            </div>

        </form>
    </div>


    <div id="addParticipantTaskModalOverlay" class="modal-overlay" style="display: none;"></div>
    <div id="addParticipantTaskModal" class="modal-content" style="display: none;">
        <span id="addParticipantTaskCloseModal" class="close">&times;</span>
        <p style="color: #ABABAB; font-size: 14px;">Добавление участника</p>
        <p id="currUserEmail" style="display: none">@Model._userService.email</p>
        <hr style="border: 0; height: 2px; background: #B5B5B5;">
        <div style="display: flex; align-content: center; align-items: center; justify-content:center;">
            <input id="participantTaskSearchInput" class="form-control" placeholder="Введите почту пользователя" />

        </div>
        <div id="searchResultsTask" style="margin-top: 16px;">
        </div>
    </div>



    <div id="participantsTaskList"></div>
}
<script>
    const addTaskButton = document.getElementById('addTaskButton');
    const addTaskModalOverlay = document.getElementById('addTaskModalOverlay');
    const addTaskModal = document.getElementById('addTaskModal');
    const addTaskCloseModal = document.getElementById('addTaskCloseModal');


    if (addTaskButton) {
        addTaskButton.addEventListener('click', () => {

            addTaskModalOverlay.style.display = 'block';
            addTaskModal.style.display = 'block';
        });
    }


    if (addTaskCloseModal) {
        addTaskCloseModal.addEventListener('click', () => {
            addTaskModalOverlay.style.display = 'none';
            addTaskModal.style.display = 'none';
        });
    }

    if (addTaskModalOverlay) {
        addTaskModalOverlay.addEventListener('click', (event) => {
            if (event.target === addTaskModalOverlay) {
                addTaskModalOverlay.style.display = 'none';
                addTaskModal.style.display = 'none';
            }
        });
    }

    const addParticipantTaskBtn = document.getElementById('addParticipantTaskBtn');
    const addParticipantTaskModalOverlay = document.getElementById('addParticipantTaskModalOverlay');
    const addParticipantTaskModal = document.getElementById('addParticipantTaskModal');
    const addParticipantTaskCloseModal = document.getElementById('addParticipantTaskCloseModal');

    const selectedTaskUsers = [];

    if (addParticipantTaskBtn) {
        addParticipantTaskBtn.addEventListener('click', () => {
            addParticipantTaskModalOverlay.style.display = 'block';
            addParticipantTaskModal.style.display = 'block';
        });
    }

    if (addParticipantTaskCloseModal) {
        addParticipantTaskCloseModal.addEventListener('click', () => {
            addParticipantTaskModalOverlay.style.display = 'none';
            addParticipantTaskModal.style.display = 'none';
        });
    }



    if (addParticipantTaskModalOverlay) {
        addParticipantTaskModalOverlay.addEventListener('click', (event) => {
            if (event.target === addParticipantTaskModalOverlay) {
                addParticipantTaskModalOverlay.style.display = 'none';
                addParticipantTaskModal.style.display = 'none';
            }
        });

    }

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }

    participantTaskSearchInput.addEventListener('input', function () {
        const email = participantTaskSearchInput.value.trim();
        if (!email) {
            searchResultsTask.innerHTML = '';
            return;
        }

        const projectId = document.getElementById('projId').textContent.trim();
        if (!projectId) {
            console.error('ID проекта не найден');
            searchResultsTask.innerHTML = '<p>Ошибка: ID проекта не указан</p>';
            return;
        }

        const token = getCookie('token');
        if (!token) {
            console.error('Токен не найден в cookies');
            searchResultsTask.innerHTML = '<p>Ошибка авторизации</p>';
            return;
        }

        fetch(`https://localhost:7136/api/auth/search-project?email=${encodeURIComponent(email)}&project=${encodeURIComponent(projectId)}`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            credentials: 'include'
        })
            .then(response => {
                if (!response.ok) {
                    if (response.status === 401) {
                        throw new Error('Не авторизован');
                    }
                    throw new Error('Ошибка сети');
                }
                return response.json();
            })
            .then(data => {
                searchResultsTask.innerHTML = '';
                const currUserEmail = document.getElementById('currUserEmail');
                if (data.length === 0) {
                    searchResultsTask.innerHTML = '<p>Пользователь не найден</p>';
                    return;
                }

                data.forEach(user => {
                    if (selectedTaskUsers.some(participant => participant.email === user.email)) {
                        return;
                    }
                    const userDiv = document.createElement('div');
                    userDiv.style.display = 'flex';
                    userDiv.style.justifyContent = 'space-between';
                    userDiv.style.alignItems = 'center';
                    userDiv.style.padding = '8px';
                    userDiv.style.paddingRight = '0px';
                    userDiv.style.borderBottom = '1px solid #D2D2D2';

                    userDiv.innerHTML = `
                    <div style="display: flex; align-items: center;">
                        <img src="/Images/big-ico.png" style="width: 20px; height: 20px; margin-right: 10px;" />
                        <p style="font-size: 13px; color: #232323;">${user.name} </p>
                        <p style="font-size: 13px; color: #232323;">${user.surname} </p>
                    </div>
                    <button class="button" style="width: 100px;" onclick="addUser('${user.email}', '${user.name} ${user.surname}')">Добавить</button>
                `;
                    searchResultsTask.appendChild(userDiv);
                });
            })
            .catch(error => {
                console.error('Ошибка при поиске пользователя:', error);
                searchResultsTask.innerHTML = `<p>${error.message}</p>`;
            });
    });
</script>


